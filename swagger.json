{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.1",
    "title": "Petly",
    "description": "Petly Project Application API Documentation",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "basePath": "/",
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "http://localhost:3000" },
    { "url": "https://arcane-everglades-20653.herokuapp.com/" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "News",
      "description": "News endpoint"
    },
    {
      "name": "Services-sidebar",
      "description": "Our friends' information endpoint"
    },
    {
      "name": "Notices",
      "description": "Notices endpoints"
    },
    {
      "name": "Pets",
      "description": "Pets endpoints"
    },
    {
      "name": "User + Pets",
      "description": "User + Pets endpoints"
    }
  ],

  "paths": {
    "users/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",

        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",

        "requestBody": {
          "description": "Loginization object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },
    "users/logout": {
      "get": {
        "tags": ["Auth"],
        "summary": "User logout",

        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },
    "users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user",

        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },
    "users/update": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update user",

        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          }
        ],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Update object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },
    "users/photo": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update photo",

        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          }
        ],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Update photo",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PhotoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhotoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },
    "news": {
      "get": {
        "tags": ["News"],
        "summary": "Get news",

        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": true,
            "type": "string",
            "description": "Get page from query"
          },
          {
            "in": "query",
            "name": "limit",
            "required": true,
            "type": "string",
            "description": "Get limit from query"
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNewsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "sponsors": {
      "get": {
        "tags": ["Services-sidebar"],
        "summary": "Get our friends' info",

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsorsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },
    "notices": {
      "post": {
        "tags": ["Notices"],
        "summary": "Create a notice",

        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          }
        ],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Notice's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoticeRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/NoticeImgRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },
    "notices/owner": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get owner",

        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticeOwnerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },
    "notices/:noticeId": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get notice by id",

        "parameters": [
          {
            "in": "path",
            "name": "noticeId",
            "required": true,
            "type": "string",
            "description": "get one notice by id"
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticeGetByIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": { }
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Notices"],
        "summary": "Delete notice by id",

        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          },
          {
            "in": "path",
            "name": "noticeId",
            "required": true,
            "type": "string",
            "description": "delete one notice by id"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticeDeleteByIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": { }
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "notices/:category": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get all notices from the category or title",

        "parameters": [
          {
            "in": "path",
            "name": "category",
            "required": true,
            "type": "string",
            "description": "get all notices from the category"
          },
          {
            "in": "query",
            "name": "query",
            "type": "string",
            "description": "get all notices from query"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string",
            "description": "get page from query"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "string",
            "description": "get limit from query"
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticeGetAllResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": { }
          }
        }
      }
    },
    "notices/favorites/all": {
      "patch": {
        "tags": ["Notices"],
        "summary": "Get owner's favorite list",

        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticeGetFavoriteListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": { }
          }
        }
      }
    },
    "notices/favorites/:noticeId": {
      "patch": {
        "tags": ["Notices"],
        "summary": "Add notice to favorites",

        "parameters": [
           {
             "in": "header",
             "name": "Authorization",
             "required": true,
             "type": "string",
             "description": "The token issued to the current user"
           },
           {
             "in": "path",
             "name": "noticeId",
             "required": true,
             "type": "string",
             "description": "notice id"
           }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticeAddToFavoritesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Notice is already in favorites list",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["Notices"],
        "summary": "Remove notice from favorites",

        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          },
          {
            "in": "path",
            "name": "noticeId",
            "required": true,
            "type": "string",
            "description": "notice id"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoticeRemoveFromFavoritesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": { }
            }
        }
      }
    },
    "pets": {
      "post": {
        "tags": ["Pets"],
        "summary": "Add pet",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Reegistration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/"
                }
              }
            }
          },
          "409": {
            "description": "Provided email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Pets"],
        "summary": "Delete pet",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Reegistration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/"
                }
              }
            }
          },
          "409": {
            "description": "Provided email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/"
                }
              }
            }
          }
        }
      }
    },
    "userPets": {
      "get": {
        "tags": ["User + Pets"],
        "summary": "Get user info",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Reegistration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/"
                }
              }
            }
          },
          "409": {
            "description": "Provided email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/"
                }
              }
            }
          }
        }
      }
    },
    "petsUser": {
      "get": {
        "tags": ["User + Pets"],
        "summary": "Get pet info",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Reegistration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/"
                }
              }
            }
          },
          "409": {
            "description": "Provided email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password", "name"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Ben"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Lviv"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number",
            "example": "(099)-999-99-99"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "01.01.1999"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Mango"
          }
        },
        "example": [
          { "email": "user2@mail.com", "userId": "4gsdg654sf6f4fd" },
          { "email": "user2@mail.com", "userId": "6dfh6dh16dfh46h" }
        ]
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "Mango"
            }
          },
          "token": {
            "type": "string",
            "description": "token",
            "example": "eyJhbXVCJ9.mNvbSIsImlhdCI6MTY3MzYQ.RPgOOLAfl"
          }
        },
        "example": {
          "user": {
            "email": "user2@mail.com",
            "name": "4gsdg654sf6f4fd"
          },
          "token": "eyJhbXVCJ9.mNvbSIsImlhdCI6MTY3MzYQ.RPgOOLAflkgtfyt"
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Ben"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Lviv"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number",
            "example": "(099)-999-99-99"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "01.01.1999"
          },
          "userPhotoURL": {
            "type": "string",
            "description": "User's photo URL",
            "example": "http://userphoto"
          }
        },
        "example": {
          "email": "user2@mail.com",
          "name": "Mango",
          "city": "Lviv",
          "phone": "(099)-999-99-99",
          "birthday": "01.01.1999",
          "userPhotoURL": "http://userphoto"
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "required": [],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Ben"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Lviv"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number",
            "example": "(099)-999-99-99"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "01.01.2023"
          }
        }
      },
      "UpdateUserResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "User has been updated"
          }
        },
        "example": { "message": "User has been updated" }
      },
      "PhotoRequest": {
        "type": "object",
        "properties": {
          "photo": {
            "type": "string",
            "description": "User's photo",
            "format": "binary"
          }
        }
      },
      "PhotoResponse": {
        "type": "object",
        "properties": {
          "userPhotoURL": {
            "type": "string",
            "description": "User's email",
            "example": "http://userphoto"
          }
        }
      },
      "GetNewsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Обережно, кліщі! Як уберегти улюбленця ",
              "example": "Обережно, кліщі! Як уберегти улюбленця"
            },
            "url": {
              "type": "string",
              "description": "New's URL",
              "example": "http://newswebsite.com/"
            },
            "description": {
              "type": "string",
              "description": "New's description",
              "example": "Завдяки зусиллям столичних служб та волонтерів, у столиці запрацював тимчасовий притулок для тварин “Виставковий центр”, який діє на території 16 павільйону на ВДНГ. Притулок даватиме прихисток тваринам..."
            },
            "date": {
              "type": "string",
              "description": "New's date",
              "example": "20/02/2021"
            }
          }
        },
        "example": [
          {
            "title": "Обережно, кліщі! Як уберегти улюбленця ",
            "url": "http://newswebsite.com/",
            "description": "Травневі прогулянки з улюбленцем не лише приємні, але й потребують пильності. З початком теплої пори року активізуються кліщі, і треба бути уважним, щоб уберегти свого песика чи котика від дуже серйозних неприємностей зі здоров`ям.",
            "date": "20/02/2021"
          },
          {
            "title": "В столиці запрацював тимчасовий притулок ",
            "url": "https://opensource.org/",
            "description": "Завдяки зусиллям столичних служб та волонтерів, у столиці запрацював тимчасовий притулок для тварин “Виставковий центр”, який діє на території 16 павільйону на ВДНГ. Притулок даватиме прихисток тваринам...",
            "date": "21/03/2022"
          }
        ]
      },
      "SponsorsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Sponsor's name",
              "example": "Барбос"
            },
            "url": {
              "type": "string",
              "description": "Sponsor's URL",
              "example": "https://www.facebook.com/NGO.Bar"
            },
            "addressUrl": {
              "type": "string",
              "description": "Sponsor's address URL",
              "example": "https://www.facebook.com/NGO.Bar"
            },
            "imageUrl": {
              "type": "string",
              "description": "Sponsor's logo date",
              "example": "https://www.facebook.com/photo/?fbid=156750233786595&set=a.156750217119930"
            },
            "address": {
              "type": "string",
              "description": "Sponsor's address",
              "example": "Grigorenka Street, 25 "
            },
            "workDays": {
              "type": "string",
              "description": "Sponsor's schedule",
              "example": "8:00- 20:00"
            },
            "phone": {
              "type": "string",
              "description": "New's description",
              "example": "066 488 0480"
            },
            "email": {
              "type": "string",
              "description": "New's date",
              "format": "email"
            }
          }
        },
        "example": [
          {
            "title": "Барбос",
            "url": "https://www.facebook.com/NGO.Bar",
            "addressUrl": "https://www.facebook.com/NGO.Bar",
            "imageUrl": "https://www.facebook.com/photo/?fbid=156750233786595&set=a.156750217119930",
            "address": "Grigorenka Street, 25 ",
            "workDays": "8:00- 20:00",
            "phone": "066 488 0480",
            "email": "barbos@gmail.com"
          },
          {
            "title": "Сіріус",
            "url": "https://dogcat.com.ua/",
            "addressUrl": "https://www.facebook.com/NGO.Bar",
            "imageUrl": "https://www.facebook.com/photo/?fbid=156750233786595&set=a.156750217119930",
            "address": "Fedorivka, Kyiv Oblast",
            "workDays": "8:00- 20:00",
            "phone": "068 488 0499",
            "email": "dogcat.sirius@gmail.com"
          }
        ]
      },
      "NoticeRequest": {
        "type": "object",
        "required": ["title", "category"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Notice's title",
            "example": "Сute dog is looking for a home"
          },
          "category": {
            "type": "string",
            "description": "'lost-found' or 'in-good-hands' or 'sell'",
            "example": "in-good-hands"
          },
          "name": {
            "type": "string",
            "description": "Animal's name",
            "example": "Polly"
          },
          "birthdate": {
            "type": "string",
            "description": "Animal's birthdate",
            "example": "1980-01-01"
          },
          "breed": {
            "type": "string",
            "description": "Animal's breed",
            "example": "shepherd dog"
          },
          "sex": {
            "type": "string",
            "description": "Animal's sex",
            "example": "'male' or 'female' or 'no info'"
          },
          "location": {
            "type": "string",
            "description": "Animal's location",
            "example": "Lviv"
          },
          "comments": {
            "type": "string",
            "description": "Comments",
            "example": "Сute dog is looking for a home"
          },
          "price": {
            "type": "number",
            "description": "Animal's price",
            "example": 100
          },
          "imgURL": {
            "type": "string",
            "description": "Animal's image",
            "example": "http://animalPhoto/"
          }
        }
      },
      "NoticeImgRequest": {
        "type": "object",
        "properties": {
          "imgURL": {
            "type": "string",
            "description": "Animal's photo",
            "format": "binary"
          }
        }
      },
      "NoticeResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Notice's title",
            "example": "Сute dog is looking for a home"
          },
          "category": {
            "type": "string",
            "description": "'lost-found' or 'in-good-hands' or 'sell'",
            "example": "in-good-hands"
          },
          "name": {
            "type": "string",
            "description": "Animal's name",
            "example": "Polly"
          },
          "birthdate": {
            "type": "string",
            "description": "Animal's birthdate",
            "example": "1980-01-01"
          },
          "breed": {
            "type": "string",
            "description": "Animal's breed",
            "example": "shepherd dog"
          },
          "sex": {
            "type": "string",
            "description": "Animal's sex",
            "example": "'male' or 'female' or 'no info'"
          },
          "location": {
            "type": "string",
            "description": "Animal's location",
            "example": "Lviv"
          },
          "comments": {
            "type": "string",
            "description": "Comments",
            "example": "Сute dog is looking for a home"
          },
          "price": {
            "type": "number",
            "description": "Animal's price",
            "example": 100
          },
          "imgURL": {
            "type": "string",
            "description": "Animal's image",
            "example": "http://animalPhoto/"
          }
        },
        "example": {
          "title": "Сute dog is looking for a home",
          "category": "in-good-hands",
          "name": "Rex",
          "birthdate": "1980-01-01",
          "breed": "shepherd dog",
          "sex": "'male' or 'female' or 'no info'",
          "location": "Lviv",
          "comments": "Сute dog is looking for a home",
          "price": 100,
          "imgURL": "http://animalPhoto/"
        }
      },
      "NoticeOwnerResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Notice's title",
              "example": "Сute dog is looking for a home"
            },
            "category": {
              "type": "string",
              "description": "'lost-found' or 'in-good-hands' or 'sell'",
              "example": "in-good-hands"
            },
            "name": {
              "type": "string",
              "description": "Animal's name",
              "example": "Polly"
            },
            "birthdate": {
              "type": "string",
              "description": "Animal's birthdate",
              "example": "2020-01-01"
            },
            "breed": {
              "type": "string",
              "description": "Animal's breed",
              "example": "shepherd dog"
            },
            "sex": {
              "type": "string",
              "description": "Animal's sex",
              "example": "'male' or 'female' or 'no info'"
            },
            "location": {
              "type": "string",
              "description": "Animal's location",
              "example": "Lviv"
            },
            "comments": {
              "type": "string",
              "description": "Comments",
              "example": "Сute dog is looking for a home"
            },
            "price": {
              "type": "number",
              "description": "Animal's price",
              "example": 100
            },
            "imgURL": {
              "type": "string",
              "description": "Animal's image",
              "example": "http://animalPhoto/"
            }
          }
        },
        "example": [
          {
            "title": "Сute cat is looking for a home",
            "category": "in-good-hands",
            "name": "Alex",
            "birthdate": "2020-01-01",
            "breed": "lovely cat",
            "sex": "'male' or 'female' or 'no info'",
            "location": "Lviv",
            "comments": "Сute cat is looking for a home",
            "price": 100,
            "imgURL": "http://animalPhoto/"
          },
          {
            "title": "Сute dog is looking for a home",
            "category": "in-good-hands",
            "name": "Rex",
            "birthdate": "2021-01-01",
            "breed": "shepherd dog",
            "sex": "'male' or 'female' or 'no info'",
            "location": "Kyiv",
            "comments": "Сute dog is looking for a home",
            "price": 200,
            "imgURL": "http://animalPhoto/"
          }
        ]
      },
      "NoticeGetByIdResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Notice's title",
            "example": "Сute dog is looking for a home"
          },
          "category": {
            "type": "string",
            "description": "'lost-found' or 'in-good-hands' or 'sell'",
            "example": "in-good-hands"
          },
          "name": {
            "type": "string",
            "description": "Animal's name",
            "example": "Polly"
          },
          "birthdate": {
            "type": "string",
            "description": "Animal's birthdate",
            "example": "1980-01-01"
          },
          "breed": {
            "type": "string",
            "description": "Animal's breed",
            "example": "shepherd dog"
          },
          "sex": {
            "type": "string",
            "description": "Animal's sex",
            "example": "'male' or 'female' or 'no info'"
          },
          "location": {
            "type": "string",
            "description": "Animal's location",
            "example": "Lviv"
          },
          "comments": {
            "type": "string",
            "description": "Comments",
            "example": "Сute dog is looking for a home"
          },
          "price": {
            "type": "number",
            "description": "Animal's price",
            "example": 100
          },
          "imgURL": {
            "type": "string",
            "description": "Animal's image",
            "example": "http://animalPhoto/"
          }
        },
        "example": {
          "title": "Сute dog is looking for a home",
          "category": "in-good-hands",
          "name": "Rex",
          "birthdate": "1980-01-01",
          "breed": "shepherd dog",
          "sex": "'male' or 'female' or 'no info'",
          "location": "Lviv",
          "comments": "Сute dog is looking for a home",
          "price": 100,
          "imgURL": "http://animalPhoto/"
        }
      },
      "NoticeDeleteByIdResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Notice has been deleted"
          }
        },
        "example": { "message": "Notice has been deleted" }
      },
      "NoticeGetAllResponse": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "description": "Notice's total quantity",
            "example": 2
          },
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Notice's title",
                  "example": "Сute dog is looking for a home"
                },
                "category": {
                  "type": "string",
                  "description": "'lost-found' or 'in-good-hands' or 'sell'",
                  "example": "in-good-hands"
                },
                "name": {
                  "type": "string",
                  "description": "Animal's name",
                  "example": "Polly"
                },
                "birthdate": {
                  "type": "string",
                  "description": "Animal's birthdate",
                  "example": "2020-01-01"
                },
                "breed": {
                  "type": "string",
                  "description": "Animal's breed",
                  "example": "shepherd dog"
                },
                "sex": {
                  "type": "string",
                  "description": "Animal's sex",
                  "example": "'male' or 'female' or 'no info'"
                },
                "location": {
                  "type": "string",
                  "description": "Animal's location",
                  "example": "Lviv"
                },
                "comments": {
                  "type": "string",
                  "description": "Comments",
                  "example": "Сute dog is looking for a home"
                },
                "price": {
                  "type": "number",
                  "description": "Animal's price",
                  "example": 100
                },
                "imgURL": {
                  "type": "string",
                  "description": "Animal's image",
                  "example": "http://animalPhoto/"
                }
              }
            }
          }
        },
          "example": {
            "total": 2,
            "result": [
              {
                "title": "Сute cat is looking for a home",
                "category": "in-good-hands",
                "name": "Alex",
                "birthdate": "2020-01-01",
                "breed": "lovely cat",
                "sex": "'male' or 'female' or 'no info'",
                "location": "Lviv",
                "comments": "Сute cat is looking for a home",
                "price": 100,
                "imgURL": "http://animalPhoto/"
              },
              {
                "title": "Сute dog is looking for a home",
                "category": "in-good-hands",
                "name": "Rex",
                "birthdate": "2021-01-01",
                "breed": "shepherd dog",
                "sex": "'male' or 'female' or 'no info'",
                "location": "Kyiv",
                "comments": "Сute dog is looking for a home",
                "price": 200,
                "imgURL": "http://animalPhoto/"
              }
            ]
          }
      },
      "NoticeGetFavoriteListResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Notice's title",
              "example": "Сute dog is looking for a home"
            },
            "category": {
              "type": "string",
              "description": "'lost-found' or 'in-good-hands' or 'sell'",
              "example": "in-good-hands"
            },
            "name": {
              "type": "string",
              "description": "Animal's name",
              "example": "Polly"
            },
            "birthdate": {
              "type": "string",
              "description": "Animal's birthdate",
              "example": "2020-01-01"
            },
            "breed": {
              "type": "string",
              "description": "Animal's breed",
              "example": "shepherd dog"
            },
            "sex": {
              "type": "string",
              "description": "Animal's sex",
              "example": "'male' or 'female' or 'no info'"
            },
            "location": {
              "type": "string",
              "description": "Animal's location",
              "example": "Lviv"
            },
            "comments": {
              "type": "string",
              "description": "Comments",
              "example": "Сute dog is looking for a home"
            },
            "price": {
              "type": "number",
              "description": "Animal's price",
              "example": 100
            },
            "imgURL": {
              "type": "string",
              "description": "Animal's image",
              "example": "http://animalPhoto/"
            }
          }
        },
        "example": [
          {
            "title": "Сute cat is looking for a home",
            "category": "in-good-hands",
            "name": "Alex",
            "birthdate": "2020-01-01",
            "breed": "lovely cat",
            "sex": "'male' or 'female' or 'no info'",
            "location": "Lviv",
            "comments": "Сute cat is looking for a home",
            "price": 100,
            "imgURL": "http://animalPhoto/"
          },
          {
            "title": "Сute dog is looking for a home",
            "category": "in-good-hands",
            "name": "Rex",
            "birthdate": "2021-01-01",
            "breed": "shepherd dog",
            "sex": "'male' or 'female' or 'no info'",
            "location": "Kyiv",
            "comments": "Сute dog is looking for a home",
            "price": 200,
            "imgURL": "http://animalPhoto/"
          }
        ]
      },
      "NoticeAddToFavoritesResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Notice was added to favorites list",
            "example": "Notice was added to favorites list"
          },
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Notice's title",
                  "example": "Сute dog is looking for a home"
                },
                "category": {
                  "type": "string",
                  "description": "'lost-found' or 'in-good-hands' or 'sell'",
                  "example": "in-good-hands"
                },
                "name": {
                  "type": "string",
                  "description": "Animal's name",
                  "example": "Polly"
                },
                "birthdate": {
                  "type": "string",
                  "description": "Animal's birthdate",
                  "example": "2020-01-01"
                },
                "breed": {
                  "type": "string",
                  "description": "Animal's breed",
                  "example": "shepherd dog"
                },
                "sex": {
                  "type": "string",
                  "description": "Animal's sex",
                  "example": "'male' or 'female' or 'no info'"
                },
                "location": {
                  "type": "string",
                  "description": "Animal's location",
                  "example": "Lviv"
                },
                "comments": {
                  "type": "string",
                  "description": "Comments",
                  "example": "Сute dog is looking for a home"
                },
                "price": {
                  "type": "number",
                  "description": "Animal's price",
                  "example": 100
                },
                "imgURL": {
                  "type": "string",
                  "description": "Animal's image",
                  "example": "http://animalPhoto/"
                }
              }
            }
          }
        },
        "example": {
          "message": "Notice was added to favorites list",
          "result": [
            {
              "title": "Сute cat is looking for a home",
              "category": "in-good-hands",
              "name": "Alex",
              "birthdate": "2020-01-01",
              "breed": "lovely cat",
              "sex": "'male' or 'female' or 'no info'",
              "location": "Lviv",
              "comments": "Сute cat is looking for a home",
              "price": 100,
              "imgURL": "http://animalPhoto/"
            },
            {
              "title": "Сute dog is looking for a home",
              "category": "in-good-hands",
              "name": "Rex",
              "birthdate": "2021-01-01",
              "breed": "shepherd dog",
              "sex": "'male' or 'female' or 'no info'",
              "location": "Kyiv",
              "comments": "Сute dog is looking for a home",
              "price": 200,
              "imgURL": "http://animalPhoto/"
            }
          ]
        }
      },
      "NoticeRemoveFromFavoritesResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Notice was removed to favorites list",
            "example": "Notice was removed to favorites list"
          },
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Notice's title",
                  "example": "Сute dog is looking for a home"
                },
                "category": {
                  "type": "string",
                  "description": "'lost-found' or 'in-good-hands' or 'sell'",
                  "example": "in-good-hands"
                },
                "name": {
                  "type": "string",
                  "description": "Animal's name",
                  "example": "Polly"
                },
                "birthdate": {
                  "type": "string",
                  "description": "Animal's birthdate",
                  "example": "2020-01-01"
                },
                "breed": {
                  "type": "string",
                  "description": "Animal's breed",
                  "example": "shepherd dog"
                },
                "sex": {
                  "type": "string",
                  "description": "Animal's sex",
                  "example": "'male' or 'female' or 'no info'"
                },
                "location": {
                  "type": "string",
                  "description": "Animal's location",
                  "example": "Lviv"
                },
                "comments": {
                  "type": "string",
                  "description": "Comments",
                  "example": "Сute dog is looking for a home"
                },
                "price": {
                  "type": "number",
                  "description": "Animal's price",
                  "example": 100
                },
                "imgURL": {
                  "type": "string",
                  "description": "Animal's image",
                  "example": "http://animalPhoto/"
                }
              }
            }
          }
        },
        "example": {
          "message": "Notice was removed to favorites list",
          "result": [
            {
              "title": "Сute cat is looking for a home",
              "category": "in-good-hands",
              "name": "Alex",
              "birthdate": "2020-01-01",
              "breed": "lovely cat",
              "sex": "'male' or 'female' or 'no info'",
              "location": "Lviv",
              "comments": "Сute cat is looking for a home",
              "price": 100,
              "imgURL": "http://animalPhoto/"
            },
            {
              "title": "Сute dog is looking for a home",
              "category": "in-good-hands",
              "name": "Rex",
              "birthdate": "2021-01-01",
              "breed": "shepherd dog",
              "sex": "'male' or 'female' or 'no info'",
              "location": "Kyiv",
              "comments": "Сute dog is looking for a home",
              "price": 200,
              "imgURL": "http://animalPhoto/"
            }
          ]
        }
      }
    },
    "securitySchemas": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
